[project]

name = "tf_backend"  # Required
version = "1.0.0"  # Required
description = "A tf_backend Python project"  # Optional
readme = "README.md" # Optional
requires-python = ">=3.7"
license = {file = "LICENSE.txt"}
keywords = ["tf_backend", "setuptools", "development"]  # Optional
authors = [
  {name = "lipracer", email = "lipracer@gmail.com" } # Optional
]


maintainers = [
  {name = "lipracer", email = "lipracer@gmail.com" } # Optional
]

classifiers = [  # Optional
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

[project.optional-dependencies] # Optional
dev = ["check-manifest"]
test = ["coverage"]


[project.urls]  # Optional
"Homepage" = "https://github.com/lipracer/tf-backend"
"Bug Reports" = "https://github.com/lipracer/tf-backend/issues"
"Funding" = "https://donate.pypi.org"
"Source" = "https://github.com/lipracer/tf-backend"


# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
package-data = {"tf_backend" = ["*.so"]}

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=43.0.0", "wheel"]
build-backend = "setuptools.build_meta"
build-base = "build/python"


[tool.setuptools.packages.find]
where = ["python"]  # list of folders that contain the packages (["."] by default)
